/*
	Generated by KBEngine!
	Please do not modify this file!
	Please inherit this module, such as: (class Pet : PetBase)
	tools = kbcmd
*/

namespace KBEngine
{
	using UnityEngine;
	using System;
	using System.Collections;
	using System.Collections.Generic;

	// defined in */scripts/entity_defs/Pet.def
	public abstract class PetBase : EntityComponent
	{
		public EntityBaseEntityCall_PetBase baseEntityCall = null;
		public EntityCellEntityCall_PetBase cellEntityCall = null;


		public abstract void onAddPet(PET_INFO arg1); 
		public abstract void onAllPetInfo(UInt64 arg1, List<PET_INFO> arg2); 
		public abstract void onAward(UInt32 arg1, UInt32 arg2); 
		public abstract void onCatchPet(string arg1, UInt32 arg2, UInt32 arg3, UInt32 arg4); 
		public abstract void onDelPet(UInt64 arg1); 
		public abstract void onPetCompound(string arg1, UInt32 arg2); 
		public abstract void onPetHarvest(PET_INFO arg1); 
		public abstract void onPetMapInfo(List<PET_MAP_INFO> arg1); 
		public abstract void onPetSelfInfo(PET_SELF_INFO arg1); 

		public override void createFromStream(MemoryStream stream)
		{
			base.createFromStream(stream);
			baseEntityCall = new EntityBaseEntityCall_PetBase(entityComponentPropertyID, ownerID);
			cellEntityCall = new EntityCellEntityCall_PetBase(entityComponentPropertyID, ownerID);
		}

		public override void onRemoteMethodCall(UInt16 methodUtype, MemoryStream stream)
		{
			ScriptModule sm = EntityDef.moduledefs["Pet"];

			Method method = sm.idmethods[methodUtype];
			switch(method.methodUtype)
			{
				case 108:
					PET_INFO onAddPet_arg1 = ((DATATYPE_PET_INFO)method.args[0]).createFromStreamEx(stream);
					onAddPet(onAddPet_arg1);
					break;
				case 106:
					UInt64 onAllPetInfo_arg1 = stream.readUint64();
					List<PET_INFO> onAllPetInfo_arg2 = ((DATATYPE_AnonymousArray_79)method.args[1]).createFromStreamEx(stream);
					onAllPetInfo(onAllPetInfo_arg1, onAllPetInfo_arg2);
					break;
				case 111:
					UInt32 onAward_arg1 = stream.readUint32();
					UInt32 onAward_arg2 = stream.readUint32();
					onAward(onAward_arg1, onAward_arg2);
					break;
				case 110:
					string onCatchPet_arg1 = stream.readUnicode();
					UInt32 onCatchPet_arg2 = stream.readUint32();
					UInt32 onCatchPet_arg3 = stream.readUint32();
					UInt32 onCatchPet_arg4 = stream.readUint32();
					onCatchPet(onCatchPet_arg1, onCatchPet_arg2, onCatchPet_arg3, onCatchPet_arg4);
					break;
				case 109:
					UInt64 onDelPet_arg1 = stream.readUint64();
					onDelPet(onDelPet_arg1);
					break;
				case 112:
					string onPetCompound_arg1 = stream.readUnicode();
					UInt32 onPetCompound_arg2 = stream.readUint32();
					onPetCompound(onPetCompound_arg1, onPetCompound_arg2);
					break;
				case 107:
					PET_INFO onPetHarvest_arg1 = ((DATATYPE_PET_INFO)method.args[0]).createFromStreamEx(stream);
					onPetHarvest(onPetHarvest_arg1);
					break;
				case 104:
					List<PET_MAP_INFO> onPetMapInfo_arg1 = ((DATATYPE_AnonymousArray_78)method.args[0]).createFromStreamEx(stream);
					onPetMapInfo(onPetMapInfo_arg1);
					break;
				case 105:
					PET_SELF_INFO onPetSelfInfo_arg1 = ((DATATYPE_PET_SELF_INFO)method.args[0]).createFromStreamEx(stream);
					onPetSelfInfo(onPetSelfInfo_arg1);
					break;
				default:
					break;
			};
		}

		public override void onUpdatePropertys(UInt16 propUtype, MemoryStream stream, int maxCount)
		{
			ScriptModule sm = EntityDef.moduledefs["Pet"];
			Dictionary<UInt16, Property> pdatas = sm.idpropertys;

			while(stream.length() > 0 && maxCount-- != 0)
			{
				UInt16 _t_utype = 0;
				UInt16 _t_child_utype = propUtype;

				if(_t_child_utype == 0)
				{
					if(sm.usePropertyDescrAlias)
					{
						_t_utype = stream.readUint8();
						_t_child_utype = stream.readUint8();
					}
					else
					{
						_t_utype = stream.readUint16();
						_t_child_utype = stream.readUint16();
					}
				}

				Property prop = null;

				prop = pdatas[_t_child_utype];

				switch(prop.properUtype)
				{
					default:
						break;
				};
			}
		}

		public override void callPropertysSetMethods()
		{
			ScriptModule sm = EntityDef.moduledefs["Pet"];
			Dictionary<UInt16, Property> pdatas = sm.idpropertys;

		}
	}
}
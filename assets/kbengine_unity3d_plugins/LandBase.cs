/*
	Generated by KBEngine!
	Please do not modify this file!
	Please inherit this module, such as: (class Land : LandBase)
	tools = kbcmd
*/

namespace KBEngine
{
	using UnityEngine;
	using System;
	using System.Collections;
	using System.Collections.Generic;

	// defined in */scripts/entity_defs/Land.def
	public abstract class LandBase : EntityComponent
	{
		public EntityBaseEntityCall_LandBase baseEntityCall = null;
		public EntityCellEntityCall_LandBase cellEntityCall = null;


		public abstract void onAllLandInfo(string arg1, UInt64 arg2, LAND_LIST arg3); 
		public abstract void onBuyLand(string arg1); 
		public abstract void onFriendBuyLand(UInt64 arg1); 
		public abstract void onGJInfo(UInt64 arg1, GJ_INFO arg2, Byte arg3); 
		public abstract void onGiveLand(string arg1); 
		public abstract void onLandInfo(string arg1, LAND_INFO arg2); 
		public abstract void onPlant(string arg1); 
		public abstract void onServerTime(UInt64 arg1); 
		public abstract void onfertilization(string arg1); 

		public override void createFromStream(MemoryStream stream)
		{
			base.createFromStream(stream);
			baseEntityCall = new EntityBaseEntityCall_LandBase(entityComponentPropertyID, ownerID);
			cellEntityCall = new EntityCellEntityCall_LandBase(entityComponentPropertyID, ownerID);
		}

		public override void onRemoteMethodCall(UInt16 methodUtype, MemoryStream stream)
		{
			ScriptModule sm = EntityDef.moduledefs["Land"];

			Method method = sm.idmethods[methodUtype];
			switch(method.methodUtype)
			{
				case 65:
					string onAllLandInfo_arg1 = stream.readUnicode();
					UInt64 onAllLandInfo_arg2 = stream.readUint64();
					LAND_LIST onAllLandInfo_arg3 = ((DATATYPE_LAND_LIST)method.args[2]).createFromStreamEx(stream);
					onAllLandInfo(onAllLandInfo_arg1, onAllLandInfo_arg2, onAllLandInfo_arg3);
					break;
				case 68:
					string onBuyLand_arg1 = stream.readUnicode();
					onBuyLand(onBuyLand_arg1);
					break;
				case 69:
					UInt64 onFriendBuyLand_arg1 = stream.readUint64();
					onFriendBuyLand(onFriendBuyLand_arg1);
					break;
				case 67:
					UInt64 onGJInfo_arg1 = stream.readUint64();
					GJ_INFO onGJInfo_arg2 = ((DATATYPE_GJ_INFO)method.args[1]).createFromStreamEx(stream);
					Byte onGJInfo_arg3 = stream.readUint8();
					onGJInfo(onGJInfo_arg1, onGJInfo_arg2, onGJInfo_arg3);
					break;
				case 70:
					string onGiveLand_arg1 = stream.readUnicode();
					onGiveLand(onGiveLand_arg1);
					break;
				case 66:
					string onLandInfo_arg1 = stream.readUnicode();
					LAND_INFO onLandInfo_arg2 = ((DATATYPE_LAND_INFO)method.args[1]).createFromStreamEx(stream);
					onLandInfo(onLandInfo_arg1, onLandInfo_arg2);
					break;
				case 71:
					string onPlant_arg1 = stream.readUnicode();
					onPlant(onPlant_arg1);
					break;
				case 64:
					UInt64 onServerTime_arg1 = stream.readUint64();
					onServerTime(onServerTime_arg1);
					break;
				case 72:
					string onfertilization_arg1 = stream.readUnicode();
					onfertilization(onfertilization_arg1);
					break;
				default:
					break;
			};
		}

		public override void onUpdatePropertys(UInt16 propUtype, MemoryStream stream, int maxCount)
		{
			ScriptModule sm = EntityDef.moduledefs["Land"];
			Dictionary<UInt16, Property> pdatas = sm.idpropertys;

			while(stream.length() > 0 && maxCount-- != 0)
			{
				UInt16 _t_utype = 0;
				UInt16 _t_child_utype = propUtype;

				if(_t_child_utype == 0)
				{
					if(sm.usePropertyDescrAlias)
					{
						_t_utype = stream.readUint8();
						_t_child_utype = stream.readUint8();
					}
					else
					{
						_t_utype = stream.readUint16();
						_t_child_utype = stream.readUint16();
					}
				}

				Property prop = null;

				prop = pdatas[_t_child_utype];

				switch(prop.properUtype)
				{
					default:
						break;
				};
			}
		}

		public override void callPropertysSetMethods()
		{
			ScriptModule sm = EntityDef.moduledefs["Land"];
			Dictionary<UInt16, Property> pdatas = sm.idpropertys;

		}
	}
}